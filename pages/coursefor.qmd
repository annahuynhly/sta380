---
title: "Who This Course is For"
format: html
editor: visual
---

# TL;DR:

-   This course is crucial if you are planning graduate studies in statistics, especially if you do a thesis, UNLESS you are a pure measure theoretic probability theorist.

-   If you are only interested in doing ML and AI, this course is not needed. I recommend `STA314` and `STA315` instead. However, if you need an extra statistics course for your degree, this is a better choice than time series analysis, survival analysis, etc.

-   This course has an emphasis on theoretical aspects, however, unlike other iterations of the course, there is also a large coding aspect. Coding skills are applicable. The project will give you a nice project to add to a resume, and you will confidently call yourself an `R` coder.

-   This is not a bird course, but you also shouldn't be annihilated, as long as you regularly keep up with the material.

# Long Answer

Recently, people have been recommending students to take this course. Furthermore, [the course description](https://utm.calendar.utoronto.ca/course/sta380h5) mentions that computational methods play a central role in modern statistics and **machine learning**.

The former is undeniably true; unless you are doing pure measure theoretic probability theory research, you will employ computational statistics techniques in your thesis.

I genuinely think if you take the course with me, you will be well prepared for most graduate programs in statistics, and your thesis supervisor should be satisfied with your `R` background.

The latter, referring to the machine learning aspect, is not necessarily true. They can be useful for machine learning, but it is not directly related the same way as the other statistics courses, `STA314` and `STA315` are. You may benefit from learning elementary Monte Carlo methods, bootstrap & jackknife, and numerical optimization.

However, I would not be surprised if you never directly employ these approaches. Furthermore, most numerical optimization techniques are graduate school level; I will mostly be touching the surface. The optimization techniques I describe in detail are more for statisticians (EM algorithm).

Unlike past iterations of the course, I highly believe statistics students should know how to code. You will need this skill for a career and modern graduate studies. Unless you are a pure measure theoretic probability theorist, you will code.

Hence, the project has a heavy `R` coding component, and there will be a coding aspect for the examinations. Don't be too alarmed; the test page details what I expect students to be able to write by hand!

As an instructor, my teaching philosophy is as follows:

-   I strive for students to know more than me when I was at their stage of their undergraduate career.

-   A course should only be as difficult as the material being taught. The tests should be a reflection of the course content. I am not fond of "gotcha!" questions or are artificially difficult due to complicated computations.

-   I want students to be adequately prepared for graduate studies, and/or be a sufficient `R` programmer.

Clearly, this will not be a bird course, and I am ambitious with the material being taught. But I don't want students to drown and be worried about their GPA. At the same time, I want you to feel confident with the course content. Hence, the pacing may feel fast but I will be super clear with expectations for the examination to help ease the stress for students.

# Reason for R

If you are getting into the ML and AI space, most things are done in `python` and you don't need `R`.

However, this is a statistics course. Most statistics research is done in `R`, not `python`.

`R` is a good programming language for statisticians; and overall has a less barrier for entry for package development. Statisticians are not trying to be engineers. We mostly want to obtain the relevant numerical analysis for our statistical models.

After all, it takes significantly less setup and lines of code for to obtain statistical information for a linear model and to graph a histogram in `R` than `python` 

There has been recent development for `python` libraries to perform linear mixed modelling and structural equation models. However, these are not as well known in the statistics community (and uncertain of any possible issues for models of high dimensions or a more complicated covariance structure.)

Most people should know both. There are already a lot of computer science courses that use `python`, and most undergraduate courses will not focus on `R` programming as much as this one.


